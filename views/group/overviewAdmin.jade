extends groupAdminPage.jade

include ../includes/modalHelper.jade
include ../includes/basic.jade

block append scripts
    script(src="/scripts/includes/modalHelper.js")
    script
        |$('.datepicker').datepicker();
    script(src="/scripts/includes/timeline.js")
    script(src="/scripts/includes/cardicons.js")
    script(src="/scripts/includes/selectTrigger.js")
    script(src="/scripts/overview.js")
    script(src="/scripts/includes/js/checkedListGroup.js")
    script
        |initListGroup($("#studentUserList"))
    script(src="/scripts/includes/js/dropzone.min.js")
    script(src="/scripts/includes/dropzoneCustom.js")

block nav_right
    +navbar-a-active("", group.name)

    +navbar-dropdown("Feedback", "feedbackDropdown")
        +dropdown-a(group.id + "/feedback/latest", "Feedback Oldest Handin")
        +dropdown-a(group.id + "/feedback", "Feedback List")

    +navbar-dropdown("Results", "resultsDropdown")
        +dropdown-a(group.id + "/user", "Results by Student")
        +dropdown-a(group.id + "/assignment", "Result by Assignment")

block append styles
    link(href="/styles/flip.css" rel="stylesheet")
    link(href="/styles/dropzone.min.css" rel="stylesheet")
    link(href="/styles/dropzoneCustom.css" rel="stylesheet")

block groupContent
    -var users = []

    #group_data(start=group.start end=group.end group=group._id)
    
    .section-container
        h2 Assignments
        if group.assignments.length > 0
            +card-container()
                for ass in group.assignments
                    +card()
                        +card-simple(ass.name, group._id + "/assignment/" + ass._id)
                        .card-date.text-center
                            if ass.typ != "open"
                                span.small= ass.due.toDateString()
                            else 
                                span.small#openExists No Deadline
                        +card-icons()
                            a.btn.btn-success.btn-card-icon.cpointer(href=group._id + "/assignment/" + ass._id)
                                    span.oi.oi-list
                            button.btn.btn-warning.btn-card-icon.cpointer(class="manipulate" data-toggle="modal" data-target="#editAssignment" target="#editAssignment" attr-data='{"assignment": "#{ass._id}", "name": "#{ass.name}", "link": "#{ass.link}", "type": "#{ass.typ}", "due": "#{ass.due}"}')
                                span.oi.oi-cog
                            if ass.link.length > 0
                                a.btn.btn-info.btn-card-icon.cpointer(href="http://" + ass.link target="_blank")
                                    span.oi.oi-info
                            button.btn.btn-danger.btn-card-icon.cpointer(class="manipulate" data-toggle="modal" data-target="#removeAssignment" target="#removeAssignmentName" text-data="#{ass.name}" attr-data='{"assignment": "#{ass._id}"}')
                                span.oi.oi-trash
        else
            p.lead This course does not have any assignments!

        .section-buttons
            button.btn.btn-outline-primary.btn-section.cpointer(type="button" data-toggle="modal" data-target="#addAssignment")
                span.oi.oi-plus
    
    .section-container
        h2 Students
        if group.students.length > 0
            +card-container
                for usr in group.students
                    -users.push('"' + usr._id + '"')
                    +card()
                        +card-simple(usr.name + " " + usr.surename, group._id + "/user/" + usr._id)
                        if usr._id != user.id
                            +card-icons()
                                a.btn.btn-success.btn-card-icon.cpointer(href=group._id + "/user/" + usr._id)
                                        span.oi.oi-list
                                a.btn.btn-primary.btn-card-icon.cpointer(href="mailto:" + usr._id + "@student.utwente.nl")
                                        span.oi.oi-envelope-open
                                button.btn.btn-danger.btn-card-icon.cpointer(data-toggle="modal" data-target="#removeUser" class="manipulate" target="#removeUserName" text-data="#{usr.name} #{usr.surename}" attr-data='{"user": "#{usr._id}"}')
                                    span.oi.oi-trash
        else    
            p.lead This course does not have any students!

        for usr in group.admins
            -users.push('"' + usr._id + '"')

        .section-buttons
            button.btn.btn-outline-primary.btn-section.cpointer(type="button" data-toggle="modal" data-target="#addUsers" onclick='javascript:getUsers(`[#{users}]`)')
                span.oi.oi-plus
            if group.students.length > 0
                - var mailStudents = group.students.map(s => s._id + "@student.utwente.nl,")
                a.btn.btn-outline-primary.btn-section.ml-2(href="mailto:" + mailStudents)
                    span.oi.oi-envelope-open


    mixin assignmentModal(id, changeType)
        .row
            .col-xs-8
                +text("Name", id + 'assignmentName')
            .col-xs-4
                - var extraClass = changeType? "hidden":""
                .input-group(class=extraClass)
                    +select("Type", id + 'assignmentType')(class="selectTrigger" container="#assignment-data" + id)
                        option(value="defined") Defined
                        option(value="open") Open
                        option(value="autograder") Autograder
        div(id="assignment-data" + id)
            .selectActor(data="defined")
                .row.mtop10
                    .col-xs-8
                        +date("Due Date", id + 'due')
                hr
                label(for=id + "infoLink") Additional Information Link (optional)
                +text("http://", id + "infoLink")
            .selectActor.hidden(data="autograder")
                hr
                .alert.alert-warning
                    p Sorry, the autograder option is disabled in this version!

    +modal('addAssignment', 'Create a New Assignment', 'primary', 'Create Assignment')
        +assignmentModal('')

    +modal('editAssignment', 'Edit Assignment', 'primary', 'Update Assignment')
        +assignmentModal('update_', true)

    +modal('removeAssignment', "Are you sure?", 'danger', 'Delete Assignment')
        .alert.alert-warning
            p
                b Warning! 
                | Your are about to delete the assignment: '
                span#removeAssignmentName
                |'!
            p This assignment will dissappear for all users. This is 
                b unrecoverable
                |!
        .alert.alert-info 
            p 
                b Note 
                | Hand-in data (files, feedback and reflections) will be kept but can only be accessed through direct links.

    +modal('removeUser', "Are you sure?", 'danger', 'Remove User')
        .alert.alert-warning
            p
                b Warning! 
                | Your are about to delete the user: '
                span#removeUserName
                |'!
            p The user will no longer have any access to the course.
        .alert.alert-info 
            p 
                b Note 
                | Hand-in data (files, feedback and reflections) will be kept and can still be accessed as normal. This action can completely be reversed by re-adding the user.
    
    +modal('addUsers', "Add Users", 'primary', 'Add Users')
        .row
            .col-xs-8
                .well.multiSelect#userSelect
                    ul.list-group.checked-list-box#allUserList
            .col-xs-4
                .input-group
                    +select("Role", 'userRole')
                        option(value="student") Student